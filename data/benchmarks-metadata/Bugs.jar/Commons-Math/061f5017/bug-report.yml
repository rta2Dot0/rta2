---
BugID: MATH-358
Summary: ODE integrator goes past specified end of integration range
Description: "End of integration range in ODE solving is handled as an event.\nIn
  some cases, numerical accuracy in events detection leads to error in events location.\nThe
  following test case shows the end event is not handled properly and an integration
  that should cover a 60s range in fact covers a 160s range, more than twice the specified
  range.\n{code}\n  public void testMissedEvent() throws IntegratorException, DerivativeException
  {\n          final double t0 = 1878250320.0000029;\n          final double t =  1878250379.9999986;\n
  \         FirstOrderDifferentialEquations ode = new FirstOrderDifferentialEquations()
  {\n            \n            public int getDimension() {\n                return
  1;\n            }\n            \n            public void computeDerivatives(double
  t, double[] y, double[] yDot)\n                throws DerivativeException {\n                yDot[0]
  = y[0] * 1.0e-6;\n            }\n        };\n\n        DormandPrince853Integrator
  integrator = new DormandPrince853Integrator(0.0, 100.0,\n                                                                               1.0e-10,
  1.0e-10);\n\n        double[] y = { 1.0 };\n        integrator.setInitialStepSize(60.0);\n
  \       double finalT = integrator.integrate(ode, t0, y, t, y);\n        Assert.assertEquals(t,
  finalT, 1.0e-6);\n    }\n\n{code}"
