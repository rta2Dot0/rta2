---
BugID: MATH-371
Summary: PearsonsCorrelation.getCorrelationPValues() precision limited by machine
  epsilon
Description: "Similar to the issue described in MATH-201, using PearsonsCorrelation.getCorrelationPValues()
  with many treatments results in p-values that are continuous down to 2.2e-16 but
  that drop to 0 after that.\n\nIn MATH-201, the problem was described as such:\n>
  So in essence, the p-value returned by TTestImpl.tTest() is:\n> \n> 1.0 - (cumulativeProbability(t)
  - cumulativeProbabily(-t))\n> \n> For large-ish t-statistics, cumulativeProbabilty(-t)
  can get quite small, and cumulativeProbabilty(t) can get very close to 1.0. When
  \n> cumulativeProbability(-t) is less than the machine epsilon, we get p-values
  equal to zero because:\n> \n> 1.0 - 1.0 + 0.0 = 0.0\n\nThe solution in MATH-201
  was to modify the p-value calculation to this:\n> p = 2.0 * cumulativeProbability(-t)\n\nHere,
  the problem is similar.  From PearsonsCorrelation.getCorrelationPValues():\n  p
  = 2 * (1 - tDistribution.cumulativeProbability(t));\n\nDirectly calculating the
  p-value using identical code as PearsonsCorrelation.getCorrelationPValues(), but
  with the following change seems to solve the problem:\n  p = 2 * (tDistribution.cumulativeProbability(-t));\n\n\n\n\n"
