---
BugID: FLINK-2658
Summary: fieldsGrouping for multiple output streams fails
Description: "If a Spout or Bolt declares multiple output streams and another Bolt
  connects to one of those streams via \"fieldsGrouping\",  the call to {{FlinkTopologyBuilder.createTopology()}}
  fails with the following exception:\n\n{noformat}\norg.apache.flink.api.common.InvalidProgramException:
  Specifying keys via field positions is only valid for tuple data types. Type: PojoType<org.apache.flink.stormcompatibility.util.SplitStreamType,
  fields = [streamId: String, value: GenericType<java.lang.Object>]>\n\tat org.apache.flink.api.java.operators.Keys$ExpressionKeys.<init>(Keys.java:209)\n\tat
  org.apache.flink.api.java.operators.Keys$ExpressionKeys.<init>(Keys.java:203)\n\tat
  org.apache.flink.streaming.api.datastream.DataStream.groupBy(DataStream.java:285)\n\tat
  org.apache.flink.stormcompatibility.api.FlinkTopologyBuilder.createTopology(FlinkTopologyBuilder.java:200)\n\tat
  org.apache.flink.stormcompatibility.api.FlinkTopologyBuilderTest.testFieldsGroupingOnMultipleBoltOutputStreams(FlinkTopologyBuilderTest.java:73)\n\tat
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat
  java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n\tat
  org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat
  org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n\tat
  org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat
  org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n\tat
  org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\tat
  org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat
  org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat
  org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat
  org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n\tat
  org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat
  org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n\tat
  org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n\tat
  org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n\tat
  org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\n{noformat}\n\nFix:
  either introduce a mapper, that \"flattens\" the {{SplitStreamType}} in to regular
  tuple type that is nested inside or provide a custom {{KeySelector}}."
