---
BugID: CAMEL-7429
Summary: 'Camel Properties Component concatenation issue '
Description: "Hi,\n\nSuppose you have a properties file of this type\n\n{code}\n#PROPERTIES
  CONCATENATION\nprop1=file:\nprop2=dirname\nconcat.property={{prop1}}{{prop2}}\n\n#PROPERTIES
  WITHOUT CONCATENATION\nproperty.complete=file:dirname\n{code}\n\nand you want to
  use the property concat.property. Using Camel 2.10.3 loading this property doesn't
  create any kind of problem. When I upgrade to Camel 2.12.3 I get an exception, that
  you can reproduce with the following informations.\n\nIn *DefaultPropertiesParser*
  class of org.apache.camel.component.properties package, I found a strange behaviour
  relative to that specific kind of property.  When I execute a test like the following,
  (the first try to use concatenated property and the second try to use property without
  concatenation):\n\n{code:title=PropertiesComponentConcatenatePropertiesTest.java}\nimport
  org.apache.camel.CamelContext;\nimport org.apache.camel.ContextTestSupport;\nimport
  org.apache.camel.builder.RouteBuilder;\n\npublic class PropertiesComponentConcatenatePropertiesTest
  extends ContextTestSupport {\n    \n    @Override\n    protected CamelContext createCamelContext()
  throws Exception {\n        CamelContext context = super.createCamelContext();\n
  \       context.addComponent(\"properties\", new PropertiesComponent(\"classpath:org/apache/camel/component/properties/concatenation.properties\"));\n
  \       return context;\n    }\n    \n    @Override\n    protected void setUp()
  throws Exception {\n        System.setProperty(\"environment\", \"junit\");\n        super.setUp();\n
  \   }\n    \n    @Override\n    protected void tearDown() throws Exception {\n        System.clearProperty(\"environment\");\n
  \       super.tearDown();\n    }\n    \n    public void testConcatPropertiesComponentDefault()
  throws Exception {\n        context.addRoutes(new RouteBuilder() {\n            @Override\n
  \           public void configure() throws Exception {\n                from(\"direct:start\").setBody(simple(\"${properties:concat.property}\"))\n
  \               .to(\"mock:result\");\n            }\n        });\n        context.start();\n\n
  \       getMockEndpoint(\"mock:result\").expectedBodiesReceived(\"file:dirname\");\n\n
  \       template.sendBody(\"direct:start\", \"Test\");\n\n        assertMockEndpointsSatisfied();\n
  \   }\n    \n    public void testWithoutConcatPropertiesComponentDefault() throws
  Exception {\n        context.addRoutes(new RouteBuilder() {\n            @Override\n
  \           public void configure() throws Exception {\n                from(\"direct:start\").setBody(simple(\"${properties:property.complete}\"))\n
  \               .to(\"mock:result\");\n            }\n        });\n        context.start();\n\n
  \       getMockEndpoint(\"mock:result\").expectedBodiesReceived(\"file:dirname\");\n\n
  \       template.sendBody(\"direct:start\", \"Test\");\n\n        assertMockEndpointsSatisfied();\n
  \   }\n}\n{code}\n\nThe first test return the following exception:\n{code}\norg.apache.camel.CamelExecutionException:
  Exception occurred during execution on the exchange: Exchange[Message: Test]\n\tat
  org.apache.camel.util.ObjectHelper.wrapCamelExecutionException(ObjectHelper.java:1379)\n\tat
  org.apache.camel.util.ExchangeHelper.extractResultBody(ExchangeHelper.java:622)\n\tat
  org.apache.camel.impl.DefaultProducerTemplate.extractResultBody(DefaultProducerTemplate.java:467)\n\tat
  org.apache.camel.impl.DefaultProducerTemplate.extractResultBody(DefaultProducerTemplate.java:463)\n\tat
  org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:139)\n\tat
  org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:144)\n\tat
  org.apache.camel.component.properties.PropertiesComponentConcatenatePropertiesTest.testConcatPropertiesComponentDefault(PropertiesComponentConcatenatePropertiesTest.java:56)\n\tat
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat
  java.lang.reflect.Method.invoke(Method.java:606)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat
  junit.framework.TestCase.runBare(TestCase.java:141)\n\tat org.apache.camel.TestSupport.runBare(TestSupport.java:58)\n\tat
  junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat
  junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat
  junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat
  org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n\tat
  org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n\tat
  org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat
  org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n\tat
  org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n\tat
  org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n\tat
  org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\nCaused
  by: org.apache.camel.RuntimeCamelException: java.lang.IllegalArgumentException:
  Expecting }} but found end of string from text: prop1}}{{prop2\n\tat org.apache.camel.util.ObjectHelper.wrapRuntimeCamelException(ObjectHelper.java:1363)\n\tat
  org.apache.camel.builder.ExpressionBuilder$78.evaluate(ExpressionBuilder.java:1784)\n\tat
  org.apache.camel.support.ExpressionAdapter.evaluate(ExpressionAdapter.java:36)\n\tat
  org.apache.camel.builder.SimpleBuilder.evaluate(SimpleBuilder.java:83)\n\tat org.apache.camel.processor.SetBodyProcessor.process(SetBodyProcessor.java:46)\n\tat
  org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)\n\tat
  org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)\n\tat
  org.apache.camel.processor.Pipeline.process(Pipeline.java:118)\n\tat org.apache.camel.processor.Pipeline.process(Pipeline.java:80)\n\tat
  org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)\n\tat
  org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:51)\n\tat
  org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)\n\tat
  org.apache.camel.processor.UnitOfWorkProducer.process(UnitOfWorkProducer.java:73)\n\tat
  org.apache.camel.impl.ProducerCache$2.doInProducer(ProducerCache.java:378)\n\tat
  org.apache.camel.impl.ProducerCache$2.doInProducer(ProducerCache.java:1)\n\tat org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:242)\n\tat
  org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:346)\n\tat org.apache.camel.impl.ProducerCache.send(ProducerCache.java:184)\n\tat
  org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:124)\n\tat
  org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:137)\n\t...
  22 more\nCaused by: java.lang.IllegalArgumentException: Expecting }} but found end
  of string from text: prop1}}{{prop2\n\tat org.apache.camel.component.properties.DefaultPropertiesParser.doParseUri(DefaultPropertiesParser.java:90)\n\tat
  org.apache.camel.component.properties.DefaultPropertiesParser.parseUri(DefaultPropertiesParser.java:51)\n\tat
  org.apache.camel.component.properties.DefaultPropertiesParser.parseUri(DefaultPropertiesParser.java:38)\n\tat
  org.apache.camel.component.properties.DefaultPropertiesParser.createPlaceholderPart(DefaultPropertiesParser.java:189)\n\tat
  org.apache.camel.component.properties.DefaultPropertiesParser.doParseUri(DefaultPropertiesParser.java:105)\n\tat
  org.apache.camel.component.properties.DefaultPropertiesParser.parseUri(DefaultPropertiesParser.java:51)\n\tat
  org.apache.camel.component.properties.PropertiesComponent.parseUri(PropertiesComponent.java:158)\n\tat
  org.apache.camel.component.properties.PropertiesComponent.parseUri(PropertiesComponent.java:117)\n\tat
  org.apache.camel.builder.ExpressionBuilder$78.evaluate(ExpressionBuilder.java:1781)\n\t...
  40 more\n{code}\n\nIt seems that *DefaultPropertiesParser* doesn't like concatenation
  of properties. I've forked Camel project on GitHub and I've added the unit test
  posted above. Here is the link: https://github.com/ancosen/camel\n\nInvestigating
  the history of the particular class I found that the problem should arise from:\n
  *CAMEL-5328 supports resolution of nested properties in PropertiesComponent*\n\nHere
  is the link of the commit:\nhttps://github.com/apache/camel/commit/83f4b0f485521967d05de4e65025c4558a75ff3c\n\nThanks.\nBye"
